package com.codingame.view;

import java.util.Base64;
import java.util.zip.Deflater;

public class StringCompressor {

  public static String compressToBase64(String data) {
    try {
      // Convert string to bytes
      byte[] input = data.getBytes("UTF-8");

      // Compress the bytes
      Deflater deflater = new Deflater();
      deflater.setInput(input);
      deflater.finish();

      byte[] buffer = new byte[1024];
      int compressedDataLength;
      try (java.io.ByteArrayOutputStream outputStream = new java.io.ByteArrayOutputStream()) {
        while (!deflater.finished()) {
          compressedDataLength = deflater.deflate(buffer);
          outputStream.write(buffer, 0, compressedDataLength);
        }
        deflater.end();

        // Encode compressed data to Base64
        return Base64.getEncoder().encodeToString(outputStream.toByteArray());
      }
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
  }

  public static void main(String[] args) {
    String originalString = "1\n"
        + "0\n"
        + "0\n"
        + "0 82552\n"
        + "51\n"
        + "0\n"
        + "0\n"
        + "602\n"
        + "9 115\n"
        + "0\n"
        + "0\n"
        + "180\n"
        + "79 10\n"
        + "0\n"
        + "0\n"
        + "502\n"
        + "10 12\n"
        + "0\n"
        + "0\n"
        + "364\n"
        + "122 139\n"
        + "0\n"
        + "0\n"
        + "111\n"
        + "87 141\n"
        + "0\n"
        + "0\n"
        + "250\n"
        + "62 67\n"
        + "0\n"
        + "0\n"
        + "158\n"
        + "67 19\n"
        + "0\n"
        + "0\n"
        + "514\n"
        + "54 66\n"
        + "0\n"
        + "0\n"
        + "380\n"
        + "88 67\n"
        + "0\n"
        + "0\n"
        + "50\n"
        + "69 45\n"
        + "0\n"
        + "0\n"
        + "111\n"
        + "117 119\n"
        + "5\n"
        + "602\n"
        + "2602\n"
        + "0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "702\n"
        + "2702\n"
        + "18 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "802\n"
        + "2802\n"
        + "24 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "902\n"
        + "2902\n"
        + "31 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1002\n"
        + "3002\n"
        + "43 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1102\n"
        + "3102\n"
        + "49 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1202\n"
        + "3202\n"
        + "50 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1302\n"
        + "3302\n"
        + "54 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1402\n"
        + "3402\n"
        + "64 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1502\n"
        + "3502\n"
        + "69 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1602\n"
        + "3602\n"
        + "74 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1702\n"
        + "3702\n"
        + "76 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1802\n"
        + "3802\n"
        + "79 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "1902\n"
        + "3902\n"
        + "81 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2002\n"
        + "4002\n"
        + "87 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2102\n"
        + "4102\n"
        + "91 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2202\n"
        + "4202\n"
        + "93 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2302\n"
        + "4302\n"
        + "95 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2402\n"
        + "4402\n"
        + "98 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2502\n"
        + "4502\n"
        + "99 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2602\n"
        + "4602\n"
        + "100 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2702\n"
        + "4702\n"
        + "101 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2802\n"
        + "4802\n"
        + "108 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "2902\n"
        + "4902\n"
        + "111 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "3002\n"
        + "5002\n"
        + "121 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "3102\n"
        + "5102\n"
        + "122 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "3202\n"
        + "5202\n"
        + "132 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "3302\n"
        + "5302\n"
        + "139 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "5\n"
        + "3402\n"
        + "5402\n"
        + "143 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n"
        + "2\n"
        + "5402\n"
        + "6606\n"
        + "9 115 1\n"
        + "2\n"
        + "5402\n"
        + "5762\n"
        + "79 10 4 2 2 2 18 18 18\n"
        + "2\n"
        + "5402\n"
        + "6163\n"
        + "88 67 36\n"
        + "2\n"
        + "5402\n"
        + "6406\n"
        + "10 12 5\n"
        + "2\n"
        + "5402\n"
        + "5625\n"
        + "87 141 21 15 15 15\n"
        + "2\n"
        + "5402\n"
        + "5502\n"
        + "69 45 39 6 6 6\n"
        + "2\n"
        + "5402\n"
        + "6130\n"
        + "122 139 9\n"
        + "2\n"
        + "5402\n"
        + "5902\n"
        + "62 67 25\n"
        + "2\n"
        + "5402\n"
        + "5625\n"
        + "117 119 41\n"
        + "2\n"
        + "5402\n"
        + "5718\n"
        + "67 19 26\n"
        + "2\n"
        + "5402\n"
        + "6431\n"
        + "54 66 31 1 1 1";
    String compressedBase64 = compressToBase64(originalString);
    System.out.println("Compressed and encoded string: " + compressedBase64);
    System.out.println("gain: " +(originalString.length() - compressedBase64.length()));
  }
}
